struct ListNode
{
	uint packedColor;
	float depth;
	uint next;
};
RWTexture2D<uint> headBuffer;
RWStructuredBuffer<ListNode> fragmentsList;

struct VS_OUTPUT
{
    float4 position : SV_POSITION;
};

float4 unpackColor(uint color)
{
	float4 output;
	output.r = float((color >> 24) & 0x000000ff) / 255.0f;
	output.g = float((color >> 16) & 0x000000ff) / 255.0f;
	output.b = float((color >> 8) & 0x000000ff) / 255.0f;
	output.a = float(color & 0x000000ff) / 255.0f;
	return saturate(output);
}

float4 main(VS_OUTPUT input) : SV_TARGET
{
	uint2 upos = uint2(input.position.xy);
	uint head = headBuffer[upos];

	float4 color = float4(0, 0, 0, 0);
	if (head != 0xffffffff)
	{
		ListNode node = fragmentsList[head];
		color = unpackColor(node.packedColor);
	}
    return color;
}